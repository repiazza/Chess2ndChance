mongodb+srv://Chess2nd:<password>@cluster0.wbadie1.mongodb.net/?retryWrites=true&w=majority



Shell Help:

    use                                        Set current database
    show                                       'show databases'/'show dbs': Print a list of all available databases.
                                               'show collections'/'show tables': Print a list of all collections for current database.
                                               'show profile': Prints system.profile information.
                                               'show users': Print a list of all users for current database.
                                               'show roles': Print a list of all roles for current database.
                                               'show log <type>': log for current connection, if type is not set uses 'global'
                                               'show logs': Print all logs.

    exit                                       Quit the MongoDB shell with exit/exit()/.exit
    quit                                       Quit the MongoDB shell with quit/quit()
    Mongo                                      Create a new connection and return the Mongo object. Usage: new Mongo(URI, options [optional])
    connect                                    Create a new connection and return the Database object. Usage: connect(URI, username [optional], password [optional])
    it                                         result of the last line evaluated; use to further iterate
    version                                    Shell version
    load                                       Loads and runs a JavaScript file into the current shell environment
    enableTelemetry                            Enables collection of anonymous usage data to improve the mongosh CLI
    disableTelemetry                           Disables collection of anonymous usage data to improve the mongosh CLI
    passwordPrompt                             Prompts the user for a password
    sleep                                      Sleep for the specified number of milliseconds
    print                                      Prints the contents of an object to the output
    printjson                                  Alias for print()
    cls                                        Clears the screen like console.clear()
    isInteractive                              Returns whether the shell will enter or has entered interactive mode



    db.createCollection( <name>,
   {
     capped: <boolean>,
     timeseries: {                  // Added in MongoDB 5.0
        timeField: <string>,        // required for time series collections
        metaField: <string>,
        granularity: <string>
     },
     expireAfterSeconds: <number>,
     clusteredIndex: <document>,    // Added in MongoDB 5.3
     changeStreamPreAndPostImages: <document>,  // Added in MongoDB 6.0
     autoIndexId: <boolean>,
     size: <number>,
     max: <number>,
     storageEngine: <document>,
     validator: <document>,
     validationLevel: <string>,
     validationAction: <string>,
     indexOptionDefaults: <document>,
     viewOn: <string>,              // Added in MongoDB 3.4
     pipeline: <pipeline>,          // Added in MongoDB 3.4
     collation: <document>,         // Added in MongoDB 3.4
     writeConcern: <document>
   }
)

<div id="a1" square="1" clm="a" ldnx="1" style="position: absolute; margin-left: 80px; margin-top: 0px; color: black;" class="darksquarecolor" bgc="darksquarecolor" sqtype="ROOKPIECE" sqcolor="WHITEPIECE" tlsq="false" trsq="b2" brsq="false" blsq="false" tsq="a2" bsq="false" lsq="false" rsq="b1" initsq="a1">ROOK</div>

$cmd
    A special virtual collection that exposes MongoDB's database commands. To use database commands, see Issue Commands.
_id
    A field required in every MongoDB document. The _id field must have a unique value. You can think of the _id field as the document's primary key. If you create a new document without an _id field, MongoDB automatically creates the field and assigns a unique BSON ObjectId.
accumulator
    An expression in an aggregation pipeline that maintains state between documents in the aggregation pipeline. For a list of accumulator operations, see $group.
action
    An operation the user can perform on a resource. Actions and resources combine to create privileges. See action.
admin database
    A privileged database. Users must have access to the admin database to run certain administrative commands. For a list of administrative commands, see Administration Commands.
aggregation
    Any of a variety of operations that reduces and summarizes large sets of data. MongoDB's aggregate() and mapReduce() methods are two examples of aggregation operations. For more information, see Aggregation Operations.
aggregation pipeline
    The set of MongoDB operators that let you calculate aggregate values without having to use map-reduce. For a list of operators, see Aggregation Reference.
arbiter
    A member of a replica set that exists solely to vote in elections. Arbiters do not replicate data. See Replica Set Arbiter.
Atlas
    MongoDB Atlas is a cloud-hosted database-as-a-service.
atomic operation
    An atomic operation is a write operation which either completes entirely, or does not complete at all. In the case of distributed transactions, which involve writes to multiple documents, all writes to each document must succeed for the transaction to succeed. Atomic operations cannot partially complete. See Atomicity and Transactions.
authentication
    Verification of the user identity. See Authentication.
authorization
    Provisioning of access to databases and operations. See Role-Based Access Control.
B-tree
    A data structure commonly used by database management systems to store indexes. MongoDB uses B-trees for its indexes.
backup cursor
    A tailable cursor that points to a list of backup files. Backup cursors are for internal use only.
balancer
    An internal MongoDB process that runs in the context of a sharded cluster and manages the migration of chunks. Administrators must disable the balancer for all maintenance operations on a sharded cluster. See Sharded Cluster Balancer.
blocking sort

    A sort that must be performed in memory before output is returned. Blocking sorts may impact performance for large data sets. Use an indexed sort to avoid a blocking sort.

    See Sort and Index Use for more information on blocking sort operations.
bounded collection scan
    A plan used by the query optimizer that eliminates documents with specific field value ranges. For example, if a range of date field values is outside of a specified date range, the documents in that range are eliminated from the query plan. See Collection Scan.
BSON
    A serialization format used to store documents and make remote procedure calls in MongoDB. "BSON" is a portmanteau of the words "binary" and "JSON". Think of BSON as a binary representation of JSON (JavaScript Object Notation) documents. See BSON Types and MongoDB Extended JSON (v2).
BSON types
    The set of types supported by the BSON serialization format. For a list of BSON types, see BSON Types.
CAP Theorem
    Given three properties of computing systems, consistency, availability, and partition tolerance, a distributed computing system can provide any two of these features, but never all three.
capped collection
    A fixed-sized collection that automatically overwrites its oldest entries when it reaches its maximum size. The MongoDB oplog that is used in replication is a capped collection. See Capped Collections.
cardinality
    The measure of the number of elements within a set of values. For example, the set A = { 2, 4, 6 } contains 3 elements, and has a cardinality of 3. See Shard Key Cardinality.
cartesian product
    The result of combining two data sets such that the combined set contains every possible combination of values.
checksum
    A calculated value used to ensure data integrity. The md5 algorithm is sometimes used as a checksum.
chunk
    A contiguous range of shard key values within a particular shard. Chunk ranges are inclusive of the lower boundary and exclusive of the upper boundary. MongoDB splits chunks when they grow beyond the configured chunk size, which by default is 128 megabytes. MongoDB migrates chunks when a shard contains too many chunks of a collection relative to other shards. See Data Partitioning with Chunks and Sharded Cluster Balancer.
client

    The application layer that uses a database for data persistence and storage. Drivers provide the interface level between the application layer and the database server.

    Client can also refer to a single thread or process.
cluster
    See sharded cluster.
clustered collection
    A collection that stores documents ordered by a clustered index key. See Clustered Collections.
CMK
    Abbreviation of Customer Master Key, see Customer Master Key.
collection
    A grouping of MongoDB documents. A collection is the equivalent of an RDBMS table. A collection exists within a single database. Collections do not enforce a schema. Documents within a collection can have different fields. Typically, all documents in a collection have a similar or related purpose. See Namespaces.
collection scan
    Collection scans are a query execution strategy where MongoDB must inspect every document in a collection to see if it matches the query criteria. These queries are very inefficient and do not use indexes. See Query Optimization for details about query execution strategies.
compound index
    An index consisting of two or more keys. See Compound Indexes.
concurrency control
    Concurrency control ensures that database operations can be executed concurrently without compromising correctness. Pessimistic concurrency control, such as used in systems with locks, will block any potentially conflicting operations even if they may not turn out to actually conflict. Optimistic concurrency control, the approach used by WiredTiger, will delay checking until after a conflict may have occurred, aborting and retrying one of the operations involved in any write conflict that arises.
config database
    An internal database that holds the metadata associated with a sharded cluster. Applications and administrators should not modify the config database in the course of normal operation. See Config Database.
config server
    A mongod instance that stores all the metadata associated with a sharded cluster. See Config Servers.
connection pool
    A cache of database connections maintained by the driver. These connections are re-used when connections to the database are required, instead of opening new connections.
container
    A collected set of software and its dependent libraries that are packaged together to make transferring between computing environments easier. Containers run as compartmentalized processes on your operating system, and can be given their own resource constraints. Common container technologies are Docker and Kubernetes.
CRUD
    An acronym for the fundamental operations of a database: Create, Read, Update, and Delete. See MongoDB CRUD Operations.
CSV
    A text-based data format consisting of comma-separated values. This format is commonly used to exchange data between relational databases since the format is well-suited to tabular data. You can import CSV files using mongoimport.
cursor
    A pointer to the result set of a query. Clients can iterate through a cursor to retrieve results. By default, cursors not opened within a session automatically timeout after 10 minutes of inactivity. Cursors opened under a session close with the end or timeout of the session. See Iterate a Cursor in mongosh.
Customer Master Key
    A key that is used to encrypt your Data Encryption Key. The customer master key should be hosted in a remote key provider.
daemon
    The conventional name for a background, non-interactive process.
data directory
    The file-system location where the mongod stores data files. The dbPath option specifies the data directory.
Data Encryption Key
    A key you use to encrypt the fields in your MongoDB documents. The encrypted Data Encryption Key is stored in your Key Vault collection. The Data Encryption Key is encrypted by the Customer Master Key.
data partition
    A distributed system architecture that splits data into ranges. Sharding uses partitioning. See Data Partitioning with Chunks.
data-center awareness
    A property that allows clients to address members in a system based on their locations. Replica sets implement data-center awareness using tagging. See Data Center Awareness.
database
    A physical container for collections. Each database gets its own set of files on the file system. A single MongoDB server typically has multiple databases.
database command
    A MongoDB operation, other than an insert, update, remove, or query. For a list of database commands, see Database Commands. To use database commands, see Issue Commands.
database profiler
    A tool that, when enabled, keeps a record on all long-running operations in a database's system.profile collection. The profiler is most often used to diagnose slow queries. See Database Profiling.
dbpath
    The location of MongoDB's data file storage. See dbPath.
DDL (Data Definition Language)
    DDL includes commands that create and modify collections and indexes. For the full list of commands, see Explicit DDL Operations, Implicit DDL Operations, and Pending DDL Operations and Transactions.
DEK
    Abbreviation of Data Encryption Key, see Data Encryption Key.
delayed member
    A replica set member that cannot become primary and applies operations at a specified delay. The delay is useful for protecting data from human error (i.e. unintentionally deleted databases) or updates that have unforeseen effects on the production database. See Delayed Replica Set Members.
document
    A record in a MongoDB collection and the basic unit of data in MongoDB. Documents are analogous to JSON objects but exist in the database in a more type-rich format known as BSON. See Documents.
dot notation
    MongoDB uses the dot notation to access the elements of an array and to access the fields of an embedded document. See Dot Notation.
draining
    The process of removing or "shedding" chunks from one shard to another. Administrators must drain shards before removing them from the cluster. See Remove Shards from an Existing Sharded Cluster.
driver
    A client library for interacting with MongoDB in a particular language. See driver.
durable
    A write operation is durable when it will persist across a shutdown (or crash) and restart of one or more server processes. For a single mongod server, a write operation is considered durable when it has been written to the server's journal file. For a replica set, a write operation is considered durable once the write operation is durable on a majority of voting nodes; i.e. written to a majority of voting nodes' journals.
election
    The process by which members of a replica set select a primary on startup and in the event of a failure. See Replica Set Elections.
Envelope Encryption
    An encryption practice where data is encrypted using a Data Encryption Key and the data encryption key is encrypted by another key called the Customer Master Key. Encrypted keys are stored within a MongoDB collection referred to as the KeyVault as BSON documents.
eventual consistency
    A property of a distributed system that allows changes to the system to propagate gradually. In a database system, this means that readable members are not required to reflect the latest writes at all times.
expression
    In the context of an aggregation pipeline, expressions are the stateless transformations that operate on the data that passes through a pipeline. See Aggregation Pipeline.
failover
    The process that allows a secondary member of a replica set to become primary in the event of a failure. See Automatic Failover.
field
    A name-value pair in a document. A document has zero or more fields. Fields are analogous to columns in relational databases. See Document Structure.
field path
    Path to a field in the document. To specify a field path, use a string that prefixes the field name with a dollar sign ($).
firewall
    A system level networking filter that restricts access based on, among other things, IP address. Firewalls form a part of an effective network security strategy. See Firewalls.
fsync
    A system call that flushes all dirty, in-memory pages to disk. MongoDB calls fsync() on its database files at least every 60 seconds. See fsync.
geohash
    A geohash value is a binary representation of the location on a coordinate grid. See Calculation of Geohash Values for 2d Indexes.
GeoJSON
    A geospatial data interchange format based on JavaScript Object Notation (JSON). GeoJSON is used in geospatial queries. For supported GeoJSON objects, see Geospatial Data. For the GeoJSON format specification, see https://tools.ietf.org/html/rfc7946#section-3.1
    .
geospatial
    Relating to geographical location. See Geospatial Queries.
GridFS
    A convention for storing large files in a MongoDB database. All of the official MongoDB drivers support this convention, as does the mongofiles program. See GridFS.
hashed shard key
    A special type of shard key that uses a hash of the value in the shard key field to distribute documents among members of the sharded cluster. See Hashed Indexes.
haystack index
    A geospatial index that enhances searches by creating "buckets" of objects grouped by a second criterion. See geoHaystack Indexes.
health manager
    A health manager runs health checks on a health manager facet at a specified intensity level. Health manager checks run at specified time intervals. A health manager can be configured to move a failing mongos out of a cluster automatically.
health manager facet
    A specific set of features and functionality that a health manager can be configured to run health checks against. For example, you can configure a health manager to monitor and manage DNS or LDAP cluster health issues automatically. See Health Manager Facets for details.
hidden member
    A replica set member that cannot become primary and are invisible to client applications. See Hidden Replica Set Members.
high availability

    High availability indicates a system designed for durability, redundancy, and automatic failover such that the applications supported by the system can operate continuously and without downtime for a long period of time. MongoDB replica sets support high availability when deployed according to our documented best practices.

    For guidance on replica set deployment architecture, see Replica Set Deployment Architectures.
idempotent
    The quality of an operation to produce the same result given the same input, whether run once or run multiple times.
index
    A data structure that optimizes queries. See Indexes.
indexed sort
    A sort in which an index provides the sorted result. Sort operations that use an index often have better performance than a blocking sort. See Use Indexed to Sort Query Results for more information.
init script
    A simple shell script used by a Linux platform's init system to start, restart, or stop a daemon process. If you installed MongoDB via a package manager, an init script has been provided for your system as part of the installation. See the respective Installation Guide for your operating system.
init system
    The init system is the first process started on a Linux platform after the kernel starts, and manages all other processes on the system. The init system uses an init script to start, restart, or stop a daemon process, such as mongod or mongos. Recent versions of Linux tend to use the systemd init system, which uses the systemctl command, while older versions tend to use the System V init system, which uses the service command. See the respective Installation Guide for your operating system.
initial sync
    The replica set operation that replicates data from an existing replica set member to a new replica set member. See Initial Sync.
intent lock
    A lock on a resource that indicates that the holder of the lock will read (intent shared) or write (intent exclusive) the resource using concurrency control at a finer granularity than that of the resource with the intent lock. Intent locks allow concurrent readers and writers of a resource. See What type of locking does MongoDB use?.
interrupt point
    A point in an operation's lifecycle when it can safely abort. MongoDB only terminates an operation at designated interrupt points. See Terminate Running Operations.
IPv6
    A revision to the IP (Internet Protocol) standard that provides a significantly larger address space to more effectively support the number of hosts on the contemporary Internet.
ISODate
    The international date format used by mongosh to display dates. The format is: YYYY-MM-DD HH:MM.SS.millis.
JavaScript
    A popular scripting language originally designed for web browsers. mongosh, the legacy mongo shell, and certain server-side functions use a JavaScript interpreter. See Server-side JavaScript for more information.
journal
    A sequential, binary transaction log used to bring the database into a valid state in the event of a hard shutdown. Journaling writes data first to the journal and then to the core data files. MongoDB enables journaling by default for 64-bit builds of MongoDB version 2.0 and newer. Journal files are pre-allocated and exist as files in the data directory. See Journaling.
JSON
    JavaScript Object Notation. A human-readable, plain text format for expressing structured data with support in many programming languages. For more information, see http://www.json.org
    . Certain MongoDB tools render an approximation of MongoDB BSON documents in JSON format. See MongoDB Extended JSON (v2).
JSON document
    A JSON document is a collection of fields and values in a structured format. For sample JSON documents, see http://json.org/example.html
    .
JSONP
    JSON with Padding. Refers to a method of injecting JSON into applications. Presents potential security concerns.
Key Vault Collection
    A MongoDB collection used to store the encrypted Data Encryption Keys as BSON documents.
least privilege
    An authorization policy that gives a user only the amount of access that is essential to that user's work and no more.
legacy coordinate pairs
    The format used for geospatial data prior to MongoDB version 2.4. This format stores geospatial data as points on a planar coordinate system (e.g. [ x, y ]). See Geospatial Queries.
LineString
    A LineString is defined by an array of two or more positions. A closed LineString with four or more positions is called a LinearRing, as described in the GeoJSON LineString specification: https://tools.ietf.org/html/rfc7946#section-3.1.4
    . To use a LineString in MongoDB, see GeoJSON Objects.
lock
    MongoDB uses locks to ensure that concurrency does not affect correctness. MongoDB uses read locks, write locks and intent locks. For more information, see What type of locking does MongoDB use?.
LVM
    Logical volume manager. LVM is a program that abstracts disk images from physical devices and provides a number of raw disk manipulation and snapshot capabilities useful for system management. For information on LVM and MongoDB, see Back Up and Restore Using LVM on Linux.
map-reduce
    A data processing and aggregation paradigm consisting of a "map" phase that selects data and a "reduce" phase that transforms the data. In MongoDB, you can run arbitrary aggregations over data using map-reduce. For map-reduce implementation, see Map-Reduce. For all approaches to aggregation, see Aggregation Operations.
mapping type
    A Structure in programming languages that associate keys with values, where keys may nest other pairs of keys and values (e.g. dictionaries, hashes, maps, and associative arrays). The properties of these structures depend on the language specification and implementation. Generally the order of keys in mapping types is arbitrary and not guaranteed.
md5
    A hashing algorithm used to efficiently provide reproducible unique strings to identify and checksum data. MongoDB uses md5 to identify chunks of data for GridFS. See filemd5.
MIB
    Management Information Base. MongoDB uses MIB files to define the type of data tracked by SNMP in the MongoDB Enterprise edition.
MIME
    Multipurpose Internet Mail Extensions. A standard set of type and encoding definitions used to declare the encoding and type of data in multiple data storage, transmission, and email contexts. The mongofiles tool provides an option to specify a MIME type to describe a file inserted into GridFS storage.
mongo

    The legacy MongoDB shell. The mongo process starts the legacy shell as a daemon connected to either a mongod or mongos instance. The shell has a JavaScript interface.

    Starting in MongoDB v5.0, mongo is deprecated and mongosh replaces mongo as the client shell. See mongosh.
mongod
    The MongoDB database server. The mongod process starts the MongoDB server as a daemon. The MongoDB server manages data requests and formats and manages background operations. See mongod.
mongos
    The MongoDB sharded cluster query router. The mongos process starts the MongoDB router as a daemon. The MongoDB router acts as an interface between an application and a MongoDB sharded cluster and handles all routing and load balancing across the cluster. See mongos.
mongosh

    MongoDB Shell. mongosh provides a shell interface to either a mongod or a mongos instance.

    Starting in MongoDB v5.0, mongosh replaces mongo as the preferred shell.
namespace
    The canonical name for a collection or index in MongoDB. The namespace is a combination of the database name and the name of the collection or index, like so: [database-name].[collection-or-index-name]. All documents belong to a namespace. See Namespaces.
natural order
    The order in which the database refers to documents on disk. This is the default sort order. See $natural and Return in Natural Order.
network partition

    A network failure that separates a distributed system into partitions such that nodes in one partition cannot communicate with the nodes in the other partition.

    Sometimes, partitions are partial or asymmetric. An example of a partial partition would be a division of the nodes of a network into three sets, where members of the first set cannot communicate with members of the second set, and vice versa, but all nodes can communicate with members of the third set. In an asymmetric partition, communication may be possible only when it originates with certain nodes. For example, nodes on one side of the partition can communicate to the other side only if they originate the communications channel.
ObjectId
    A special 12-byte BSON type that guarantees uniqueness within the collection. The ObjectId is generated based on timestamp, machine ID, process ID, and a process-local incremental counter. MongoDB uses ObjectId values as the default values for _id fields.
operator
    A keyword beginning with a $ used to express an update, complex query, or data transformation. For example, $gt is the query language's "greater than" operator. For available operators, see Operators.
oplog
    A capped collection that stores an ordered history of logical writes to a MongoDB database. The oplog is the basic mechanism enabling replication in MongoDB. See Replica Set Oplog.
optime

    Changed in version 3.2: The following describes the optime format used by protocolVersion: 1, introduced in MongoDB 3.2.

    A reference to a position in the replication oplog. The optime value is a document that contains:

        ts, the Timestamp of the operation.
        t, the term in which the operation was originally generated on the primary.

ordered query plan
    A query plan that returns results in the order consistent with the sort() order. See Query Plans.
orphaned document

    In a sharded cluster, orphaned documents are those documents on a shard that also exist in chunks on other shards as a result of failed migrations or incomplete migration cleanup due to abnormal shutdown.

    Starting in MongoDB 4.4, orphaned documents are cleaned up automatically after a chunk migration completes. You no longer need to run cleanupOrphaned to delete orphaned documents.
passive member
    A member of a replica set that cannot become primary because its members[n].priority is 0. See Priority 0 Replica Set Members.
PID
    A process identifier. UNIX-like systems assign a unique-integer PID to each running process. You can use a PID to inspect a running process and send signals to it. See /proc File System.
pipe
    A communication channel in UNIX-like systems allowing independent processes to send and receive data. In the UNIX shell, piped operations allow users to direct the output of one command into the input of another.
pipeline
    A series of operations in an aggregation process. See Aggregation Pipeline.
Point
    A single coordinate pair as described in the GeoJSON Point specification: https://tools.ietf.org/html/rfc7946#section-3.1.2
    . To use a Point in MongoDB, see GeoJSON Objects.
Polygon

    An array of LinearRing coordinate arrays, as described in the GeoJSON Polygon specification: https://tools.ietf.org/html/rfc7946#section-3.1.6

    . For Polygons with multiple rings, the first must be the exterior ring and any others must be interior rings or holes.

    MongoDB does not permit the exterior ring to self-intersect. Interior rings must be fully contained within the outer loop and cannot intersect or overlap with each other. See GeoJSON Objects.
post-image document
    A document after it was inserted, replaced, or updated. See Change Streams with Document Pre- and Post-Images.
powerOf2Sizes
    A per-collection setting that changes and normalizes the way MongoDB allocates space for each document, in an effort to maximize storage reuse and to reduce fragmentation. This is the default for TTL Collections. See collMod.
pre-image document
    A document before it was replaced, updated, or deleted. See Change Streams with Document Pre- and Post-Images.
pre-splitting
    An operation performed before inserting data that divides the range of possible shard key values into chunks to facilitate easy insertion and high write throughput. In some cases pre-splitting expedites the initial distribution of documents in sharded cluster by manually dividing the collection rather than waiting for the MongoDB balancer to do so. See Create Chunks in a Sharded Cluster.
prefix compression
    Reduces memory and disk consumption by storing any identical index key prefixes only once, per page of memory. See: Compression for more about WiredTiger's compression behavior.
primary
    In a replica set, the primary is the member that receives all write operations. See Primary.
primary key
    A record's unique immutable identifier. In an RDBMS, the primary key is typically an integer stored in each row's id field. In MongoDB, the _id field holds a document's primary key which is usually a BSON ObjectId.
primary shard
    The shard that holds all the un-sharded collections. See Primary Shard.
priority
    A configurable value that helps determine which members in a replica set are most likely to become primary. See members[n].priority.
privilege
    A combination of specified resource and actions permitted on the resource. See privilege.
projection
    A document given to a query that specifies which fields MongoDB returns in the result set. See Project Fields to Return from Query. For a list of projection operators, see Projection Operators.
query
    A read request. MongoDB uses a JSON-like query language that includes a variety of query operators with names that begin with a $ character. In mongosh, you can issue queries using the db.collection.find() and db.collection.findOne() methods. See Query Documents.
query optimizer
    A process that generates query plans. For each query, the optimizer generates a plan that matches the query to the index that will return results as efficiently as possible. The optimizer reuses the query plan each time the query runs. If a collection changes significantly, the optimizer creates a new query plan. See Query Plans.
query shape

    A combination of query predicate, sort, projection, and collation. The query shape allows MongoDB to identify logically equivalent queries and analyze their performance.

    For the query predicate, only the structure of the predicate, including the field names, are significant; the values in the query predicate are insignificant. As such, a query predicate { type: 'food' } is equivalent to the query predicate { type: 'utensil' } for a query shape.

    To help identify slow queries with the same query shape, starting in MongoDB 4.2, each query shape is associated with a queryHash. The queryHash is a hexadecimal string that represents a hash of the query shape and is dependent only on the query shape.
    Note

    As with any hash function, two different query shapes may result in the same hash value. However, the occurrence of hash collisions between different query shapes is unlikely.
RDBMS
    Relational Database Management System. A database management system based on the relational model, typically using SQL as the query language.
read concern
    Specifies a level of isolation for read operations. For example, you can use read concern to only read data that has propagated to a majority of nodes in a replica set. See Read Concern.
read lock
    A shared lock on a resource such as a collection or database that, while held, allows concurrent readers but no writers. See What type of locking does MongoDB use?.
read preference
    A setting that determines how clients direct read operations. Read preference affects all replica sets, including shard replica sets. By default, MongoDB directs reads to primaries. However, you may also direct reads to secondaries for eventually consistent reads. See Read Preference.
recovering
    A replica set member status indicating that a member is not ready to begin normal activities of a secondary or primary. Recovering members are unavailable for reads.
replica pairs

    The precursor to the MongoDB replica sets.

    Deprecated since version 1.6.
replica set
    A cluster of MongoDB servers that implements replication and automated failover. MongoDB's recommended replication strategy. See Replication.
replication
    A feature allowing multiple database servers to share the same data, thereby ensuring redundancy and facilitating load balancing. See Replication.
replication lag
    The length of time between the last operation in the primary's oplog and the last operation applied to a particular secondary. In general, you want to keep replication lag as small as possible. See Replication Lag.
resident memory
    The subset of an application's memory currently stored in physical RAM. Resident memory is a subset of virtual memory, which includes memory mapped to physical RAM and to disk.
resource
    A database, collection, set of collections, or cluster. A privilege permits actions on a specified resource. See resource.
role
    A set of privileges that permit actions on specified resources. Roles assigned to a user determine the user's access to resources and operations. See Security.
rollback
    A process that reverts writes operations to ensure the consistency of all replica set members. See Rollbacks During Replica Set Failover.
secondary
    A replica set member that replicates the contents of the master database. Secondary members may handle read requests, but only the primary members can handle write operations. See Secondaries.
secondary index
    A database index that improves query performance by minimizing the amount of work that the query engine must perform to fulfill a query. See Indexes.
seed list
    A seed list is used by drivers and clients (like mongosh) for initial discovery of the replica set configuration. Seed lists can be provided as a list of host:port pairs (see Standard Connection String Format or via DNS entries (see DNS Seed List Connection Format).
set name
    The arbitrary name given to a replica set. All members of a replica set must have the same name specified with the replSetName setting or the --replSet option.
shard
    A single mongod instance or replica set that stores some portion of a sharded cluster's total data set. In production, all shards should be replica sets. See Shards.
shard key
    The field MongoDB uses to distribute documents among members of a sharded cluster. See Shard Keys.
sharded cluster
    The set of nodes comprising a sharded MongoDB deployment. A sharded cluster consists of config servers, shards, and one or more mongos routing processes. See Sharded Cluster Components.
sharding
    A database architecture that partitions data by key ranges and distributes the data among two or more database instances. Sharding enables horizontal scaling. See Sharding.
shell helper
    A method in mongosh that provides a more concise syntax for a database command. Shell helpers improve the general interactive experience. See mongosh Methods.
single-master replication
    A replication topology where only a single database instance accepts writes. Single-master replication ensures consistency and is the replication topology employed by MongoDB. See Replica Set Primary.
snappy
    A compression/decompression library designed to balance efficient computation requirements with reasonable compression rates. Snappy is the default compression library for MongoDB's use of WiredTiger. See Snappy
and the WiredTiger compression documentation
    for more information.
split
    The division between chunks in a sharded cluster. See Data Partitioning with Chunks.
SQL
    Structured Query Language (SQL) is a common special-purpose programming language used for interaction with a relational database, including access control, insertions, updates, queries, and deletions. There are some similar elements in the basic SQL syntax supported by different database vendors, but most implementations have their own dialects, data types, and interpretations of proposed SQL standards. Complex SQL is generally not directly portable between major RDBMS products. SQL is often used as metonym for relational databases.
SSD
    Solid State Disk. A high-performance disk drive that uses solid state electronics for persistence, as opposed to the rotating platters and movable read/write heads used by traditional mechanical hard drives.
standalone
    An instance of mongod that is running as a single server and not as part of a replica set. To convert a standalone into a replica set, see Convert a Standalone to a Replica Set.
storage engine
    The part of a database that is responsible for managing how data is stored and accessed, both in memory and on disk. Different storage engines perform better for specific workloads. See Storage Engines for specific details on the built-in storage engines in MongoDB.
storage order
    See natural order.
strict consistency
    A property of a distributed system requiring that all members always reflect the latest changes to the system. In a database system, this means that any system that can provide data must reflect the latest writes at all times.
Subject Alternative Name
    Subject Alternative Name (SAN) is an extension of the X.509 certificate which allows an array of values such as IP addresses and domain names that specify which resources a single security certificate may secure.
sync
    The replica set operation where members replicate data from the primary. Sync first occurs when MongoDB creates or restores a member, which is called initial sync. Sync then occurs continually to keep the member updated with changes to the replica set's data. See Replica Set Data Synchronization.
syslog
    On UNIX-like systems, a logging process that provides a uniform standard for servers and processes to submit logging information. MongoDB provides an option to send output to the host’s syslog system. See syslogFacility.
tag

    A label applied to a replica set member and used by clients to issue data-center-aware operations. For more information on using tags with replica sets, see the following sections of this manual: Read Preference Tag Set Lists.

    Changed in version 3.4: In MongoDB 3.4, sharded cluster zones replace tags.
tag set
    A document containing zero or more tags.
tailable cursor
    For a capped collection, a tailable cursor is a cursor that remains open after the client exhausts the results in the initial cursor. As clients insert new documents into the capped collection, the tailable cursor continues to retrieve documents.
term
    For the members of a replica set, a monotonically increasing number that corresponds to an election attempt.
time series collection
    A collection that efficiently stores sequences of measurements over a period of time. See Time Series Collections.
topology
    The state of a deployment of MongoDB instances, including the type of deployment (i.e. standalone, replica set, or sharded cluster) as well as the availability of servers, and the role of each server (i.e. primary, secondary, config server, or mongos.)
TSV
    A text-based data format consisting of tab-separated values. This format is commonly used to exchange data between relational databases, since the format is well-suited to tabular data. You can import TSV files using mongoimport.
TTL
    Stands for "time to live" and represents an expiration time or period for a given piece of information to remain in a cache or other temporary storage before the system deletes it or ages it out. MongoDB has a TTL collection feature. See Expire Data from Collections by Setting TTL.
unique index
    An index that enforces uniqueness for a particular field across a single collection. See Unique Indexes.
unix epoch
    January 1st, 1970 at 00:00:00 UTC. Commonly used in expressing time, where the number of seconds or milliseconds since this point is counted.
unordered query plan
    A query plan that returns results in an order inconsistent with the sort() order. See Query Plans.
upsert
    An option for update operations; e.g. db.collection.updateOne(), db.collection.findAndModify(). If set to true, the update operation will either update the document(s) matched by the specified query or if no documents match, insert a new document. The new document will have the fields indicated in the operation. See Insert a New Document if No Match Exists (Upsert).
virtual memory
    An application's working memory, typically residing on both disk and in physical RAM.
WGS84
    The default reference system and geodetic datum that MongoDB uses to calculate geometry over an Earth-like sphere for geospatial queries on GeoJSON objects. See the "EPSG:4326: WGS 84" specification: http://spatialreference.org/ref/epsg/4326/
    .
working set
    The data that MongoDB uses most often.
write concern
    Specifies whether a write operation has succeeded. Write concern allows your application to detect insertion errors or unavailable mongod instances. For replica sets, you can configure write concern to confirm replication to a specified number of members. See Write Concern.
write conflict
    A situation in which two concurrent operations, at least one of which is a write, attempt to use a resource in a way that would violate constraints imposed by a storage engine using optimistic concurrency control. MongoDB will transparently abort and retry one of the conflicting operations.
write lock
    An exclusive lock on a resource such as a collection or database. When a process writes to a resource, it takes an exclusive write lock to prevent other processes from writing to or reading from that resource. For more information on locks, see FAQ: Concurrency.
writeBacks
    The process within the sharding system that ensures that writes issued to a shard that is not responsible for the relevant chunk get applied to the proper shard. For related information, see What does writebacklisten in the log mean? and writeBacksQueued.
zlib
    A data compression library that provides higher compression rates at the cost of more CPU, compared to MongoDB's use of snappy. You can configure WiredTiger to use zlib as its compression library. See http://www.zlib.net
and the WiredTiger compression documentation
    for more information.
zone

    A grouping of documents based on ranges of shard key values for a given sharded collection. Each shard in the sharded cluster can associate with one or more zones. In a balanced cluster, MongoDB directs reads and writes covered by a zone only to those shards inside the zone. See the Zones manual page for more information.

    Zones supersede functionality described by tags in MongoDB 3.2.
zstd

    New in version 4.2.

    A data compression library that provides higher compression rates and lower CPU usage when compared to zlib.